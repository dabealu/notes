# Custom config for sway  ~/.config/sway/config.
# Default config can be found in /etc/sway/config.
# Read `man 5 sway` for a complete reference.

### Appearance and fonts
set $font            pango:ubuntu
set $font-dmenu      pango:ubuntu
set $font-size       12
set $bar-font-size   12
set $dmenu-font-size 12

font $font $font-size

# Set thin border for all windows
default_border normal 1
# gaps inner 1
# gaps outer 1

# Show window class in title
for_window [class=".*"] title_format "<b>%class</b> : %title"

# Workspace aliases
set $ws1 " 1 "
set $ws2 " 2 "
set $ws3 " 3 "
set $ws4 " 4 "
set $ws5 " 5 "
set $ws6 " 6 "
set $ws7 " 7 "
set $ws8 " 8 "
set $ws9 " 9 "
set $ws0 " 0 "

# Apps placement
assign [class="Google-chrome"] $ws1
assign [class="Slack"]         $ws2
assign [class="Telegram"]      $ws2
assign [class="Code"]          $ws3


### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left  h
set $down  j
set $up    k
set $right l

# Terminal emulator
set $term x-terminal-emulator


### Output configuration
# Default wallpaper
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

# Set resolution, run `swaymsg -t get_outputs` to list outputs
# output HDMI-A-1 resolution 1920x1080 position 1920,0


### Idle configuration
# This will lock your screen after 900 seconds of inactivity, then turn off
# your displays after another 1800 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
        timeout 900  'swaylock -f -c 000000' \
        timeout 1800 'swaymsg "output * dpms off"' \
        resume       'swaymsg "output * dpms on"' \
        before-sleep 'swaylock -f -c 000000'


### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:touchpad {
    dwt              enabled
    tap              enabled
    natural_scroll   disabled
    middle_emulation enabled
    pointer_accel    0.2
}

input type:keyboard {
    # Toggle keyboard layout
    xkb_layout  us,ru
    xkb_options grp:alt_shift_toggle
}

### Key bindings
# Basics:
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'Do you really want to exit sway?' -b 'Yes, exit sway' 'swaymsg exit'

# Moving around:
    # Move your focus around
    bindsym $mod+$left  focus left
    bindsym $mod+$down  focus down
    bindsym $mod+$up    focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left   focus left
    bindsym $mod+Down   focus down
    bindsym $mod+Up     focus up
    bindsym $mod+Right  focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left  move left
    bindsym $mod+Shift+$down  move down
    bindsym $mod+Shift+$up    move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left   move left
    bindsym $mod+Shift+Down   move down
    bindsym $mod+Shift+Up     move up
    bindsym $mod+Shift+Right  move right

# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws0
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws0
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left  resize shrink width  10px
    bindsym $down  resize grow   height 10px
    bindsym $up    resize shrink height 10px
    bindsym $right resize grow   width  10px

    # Ditto, with arrow keys
    bindsym Left  resize shrink width  10px
    bindsym Down  resize grow   height 10px
    bindsym Up    resize shrink height 10px
    bindsym Right resize grow   width  10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Colors:
# No spaces before and after color !
set $lock-color #000000
set $inactive-bg-color #000000
set $urgent-text-color #000000

set $text-color #ffffff
set $bg-color #404040
set $inactive-text-color #ffffff
set $urgent-bg-color #008000

# frame colors          border             background         text                 indicator          child_border
client.focused          $bg-color          $bg-color          $text-color          $inactive-bg-color $inactive-bg-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $inactive-bg-color $inactive-bg-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $inactive-bg-color $inactive-bg-color
client.urgent           $urgent-bg-color   $urgent-bg-color   $urgent-text-color   $inactive-bg-color $inactive-bg-color
client.placeholder      $inactive-bg-color $inactive-bg-color $inactive-text-color $inactive-bg-color $inactive-bg-color
# background take only 1 color
client.background       $inactive-bg-color

# Status Bar (man 5 sway-bar):
bar {
    # When the status_command prints a new line to stdout, swaybar updates.
    status_command while ~/.config/sway/status.sh; do sleep 1; done

    position top
    font $font $bar-font-size
    tray_padding 0
    # tray_output primary
    pango_markup enabled

    colors {
        statusline $text-color
        background $inactive-bg-color
        separator  $inactive-text-color

        # class            border             background         text
        focused_workspace  $bg-color          $bg-color          $text-color
        inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
        urgent_workspace   $urgent-bg-color   $urgent-bg-color   $urgent-text-color
    }
}

# Power control shutdown/reboot/suspend:
set $mode_system [S]uspend   [H]ibernate   [E]xit   [L]ock   [R]eboot   [P]oweroff
mode "$mode_system" {
    bindsym s exec systemctl suspend, mode "default"
    bindsym h exec systemctl hibernate, mode "default"
    bindsym e exec swaymsg exit
    bindsym l exec swaylock -l -k --color "$lock-color", mode "default"
    bindsym r exec systemctl reboot
    bindsym p exec systemctl poweroff
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Escape mode "$mode_system"

# Screen lock
bindsym $mod+Control+l exec swaylock --color "$lock-color"

# Full screenshot
bindsym --release Print exec "grim $(xdg-user-dir PICTURES)/$(date +'screenshot_%F-%T.png')"
# Screenshot selected and save to buffer
bindsym --release Shift+Print exec "slurp | grim -g - - | wl-copy"
# Screenshot selected and save as file
bindsym --release $mod+Shift+Print exec "slurp | grim -g - $(xdg-user-dir PICTURES)/$(date +'screenshot_%F-%T.png')"

# Pulse Audio controls (get sink list to chose appropriate: pactl list sinks)
bindsym $mod+Control+plus exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym $mod+Control+minus exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym $mod+Control+0 exec pactl set-sink-mute @DEFAULT_SINK@ toggle

# TODO: screen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Switch workspaces via arrow keys
bindsym $mod+Control+Left workspace prev
bindsym $mod+Control+Right workspace next

# Mouse right clock on title - kill window
bindsym button3 kill

# Mouse middle-click - switch layout between split/tabbed/stacked
bindsym button2 layout toggle

# Move the current workspace to the next output
bindsym $mod+x move workspace to output right

# TODO: Translate selected text
bindsym $mod+z exec "$HOME/.config/sway/translate.sh"

# Start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -b -p '>' -fn '$font-dmenu:size=$dmenu-font-size' -sb '$urgent-bg-color' -nb '$inactive-bg-color' -nf '$text-color' -sf '$urgent-text-color'


### Autostart
# bluetooth applet
exec blueman-applet
# notification daemon
exec dunst
# apps
exec google-chrome
exec slack
exec Telegram
exec code


### Include config files:
include /etc/sway/config.d/*
